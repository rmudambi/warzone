# Generated by Django 2.2.3 on 2019-08-18 11:52

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('api_id', models.SmallIntegerField(editable=False)),
                ('name', models.CharField(max_length=255)),
                ('base_value', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.SmallIntegerField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=31)),
            ],
        ),
        migrations.CreateModel(
            name='FogLevel',
            fields=[
                ('id', models.CharField(editable=False, max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('number_of_turns', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Ladder',
            fields=[
                ('id', models.SmallIntegerField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_number', models.SmallIntegerField()),
                ('armies', models.SmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderType',
            fields=[
                ('id', models.CharField(max_length=63, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=63)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('is_multi_day', models.BooleanField(default=True)),
                ('is_multi_attack', models.BooleanField(default=False)),
                ('allow_percentage_attacks', models.BooleanField(default=True)),
                ('allow_attack_only', models.BooleanField(default=True)),
                ('allow_transfer_only', models.BooleanField(default=True)),
                ('is_cycle_move_order', models.BooleanField(default=True)),
                ('is_booted_to_ai', models.BooleanField(default=False)),
                ('is_surrender_to_ai', models.BooleanField(default=False)),
                ('times_return_from_ai', models.SmallIntegerField(default=2)),
                ('is_manual_distribution', models.BooleanField(default=True)),
                ('distribution_mode', models.SmallIntegerField(default=-1)),
                ('territory_limit', models.IntegerField()),
                ('initial_armies', models.IntegerField(default=4)),
                ('out_distribution_neutrals', models.IntegerField(default=2)),
                ('in_distribution_neutrals', models.IntegerField(default=4)),
                ('wasteland_count', models.IntegerField()),
                ('wasteland_size', models.IntegerField(default=10)),
                ('is_commerce', models.BooleanField(default=False)),
                ('has_commanders', models.BooleanField(default=False)),
                ('is_one_army_stand_guard', models.BooleanField(default=True)),
                ('base_income', models.IntegerField(default=5)),
                ('luck_modifier', models.FloatField(default=0.0)),
                ('is_straight_round', models.BooleanField(default=True)),
                ('bonus_army_per', models.SmallIntegerField(blank=True, null=True)),
                ('army_cap', models.SmallIntegerField(blank=True, null=True)),
                ('offensive_kill_rate', models.SmallIntegerField(default=60)),
                ('defensive_kill_rate', models.SmallIntegerField(default=70)),
                ('is_local_deployment', models.BooleanField(default=False)),
                ('is_no_split', models.BooleanField(default=False)),
                ('max_cards', models.SmallIntegerField()),
                ('card_pieces_per_turn', models.SmallIntegerField()),
                ('card_playing_visible', models.BooleanField(default=False)),
                ('card_visible', models.BooleanField(default=False)),
                ('uses_mods', models.BooleanField(default=False)),
                ('fog_level', models.ForeignKey(default='Foggy', on_delete=django.db.models.deletion.CASCADE, to='game_analysis.FogLevel')),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Map')),
            ],
        ),
        migrations.CreateModel(
            name='Territory',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('api_id', models.SmallIntegerField(editable=False)),
                ('name', models.CharField(max_length=255)),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Map')),
            ],
        ),
        migrations.CreateModel(
            name='AttackTransferOrder',
            fields=[
                ('order_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game_analysis.Order')),
                ('attack_transfer', models.CharField(blank=True, max_length=15, null=True)),
                ('is_attack_teammates', models.BooleanField(default=False)),
                ('is_attack_by_percent', models.BooleanField(default=False)),
            ],
            bases=('game_analysis.order',),
        ),
        migrations.CreateModel(
            name='Turn',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('turn_number', models.SmallIntegerField()),
                ('commit_date_time', models.DateTimeField(blank=True, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Game')),
            ],
            options={
                'unique_together': {('game', 'turn_number')},
            },
        ),
        migrations.AddField(
            model_name='order',
            name='order_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.OrderType'),
        ),
        migrations.AddField(
            model_name='order',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player', to='game_analysis.Player'),
        ),
        migrations.AddField(
            model_name='order',
            name='primary_territory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primary_territory', to='game_analysis.Territory'),
        ),
        migrations.AddField(
            model_name='order',
            name='secondary_territory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secondary_territory', to='game_analysis.Territory'),
        ),
        migrations.AddField(
            model_name='order',
            name='target_bonus',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Bonus'),
        ),
        migrations.AddField(
            model_name='order',
            name='target_player',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_player', to='game_analysis.Player'),
        ),
        migrations.AddField(
            model_name='order',
            name='turn',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Turn'),
        ),
        migrations.AddField(
            model_name='game',
            name='players',
            field=models.ManyToManyField(to='game_analysis.Player'),
        ),
        migrations.AddField(
            model_name='game',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Template'),
        ),
        migrations.AddField(
            model_name='game',
            name='winner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winner', to='game_analysis.Player'),
        ),
        migrations.AddField(
            model_name='bonus',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Map'),
        ),
        migrations.CreateModel(
            name='TerritoryState',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('armies', models.SmallIntegerField()),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Player')),
                ('territory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Territory')),
                ('turn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Turn')),
            ],
            options={
                'unique_together': {('turn', 'territory')},
            },
        ),
        migrations.CreateModel(
            name='TerritoryConnection',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('from_territory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Territory')),
                ('to_territory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='game_analysis.Territory')),
            ],
            options={
                'unique_together': {('from_territory', 'to_territory')},
            },
        ),
        migrations.CreateModel(
            name='TemplateOverriddenBonus',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('new_value', models.SmallIntegerField()),
                ('bonus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Bonus')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Template')),
            ],
            options={
                'unique_together': {('template', 'bonus')},
            },
        ),
        migrations.CreateModel(
            name='TemplateCardSetting',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number_of_pieces', models.SmallIntegerField()),
                ('initial_pieces', models.SmallIntegerField()),
                ('min_pieces_per_turn', models.SmallIntegerField()),
                ('weight', models.FloatField()),
                ('mode', models.SmallIntegerField(blank=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
                ('duration', models.SmallIntegerField(blank=True, null=True)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Card')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Template')),
            ],
            options={
                'unique_together': {('template', 'card')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='order',
            unique_together={('turn', 'order_number')},
        ),
        migrations.CreateModel(
            name='CardState',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('completed_cards', models.SmallIntegerField(default=0)),
                ('pieces_until_next_card', models.SmallIntegerField()),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Card')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Player')),
                ('turn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Turn')),
            ],
            options={
                'unique_together': {('turn', 'card', 'player')},
            },
        ),
        migrations.CreateModel(
            name='BonusTerritory',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bonus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Bonus')),
                ('territory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.Territory')),
            ],
            options={
                'unique_together': {('bonus', 'territory')},
            },
        ),
        migrations.CreateModel(
            name='AttackResult',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_attack', models.BooleanField()),
                ('is_successful', models.BooleanField()),
                ('attack_size', models.SmallIntegerField()),
                ('attacking_armies_killed', models.SmallIntegerField()),
                ('defending_armies_killed', models.SmallIntegerField()),
                ('offense_luck', models.FloatField()),
                ('defense_luck', models.FloatField()),
                ('attack_transfer_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_analysis.AttackTransferOrder', unique=True)),
            ],
        ),
    ]
